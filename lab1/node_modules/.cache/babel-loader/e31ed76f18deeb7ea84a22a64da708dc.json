{"ast":null,"code":"var _jsxFileName = \"/Users/jennyrudemo/Documents/Code/TNM040/lab1/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport countries from 'world-countries';\n\nconst CountryInfo = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"countryName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.data.name.common), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.data.area, \" km\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"2\")), Bar);\n};\n\nconst Bar = props => {\n  let ratio = props.data.area / 17098242;\n  const result = ratio * 100 + \"%\";\n  console.log(ratio);\n  return React.createElement(\"div\", {\n    className: \"bar\",\n    style: {\n      width: result\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n};\n\nfunction App() {\n  //console.log(countries);\n  //sortera länderna efter area med sort\n  countries.sort((a, b) => b.area - a.area); //console.log(countries);\n  //filtrera bort Antarktis\n\n  let filteredCountries = countries.filter(country => country.name.common !== \"Antarctica\"); //console.log(filteredCountries);\n  //välj ut första 15 med slice\n\n  let top15countries = filteredCountries.slice(0, 15);\n  console.log(top15countries); //const top = top15countries.filter(data => data.name.common !== 'Antarctica');\n  //let sortedCountries = countries.sort();\n  //console.log(sortedCountries);\n\n  /*for (let i=0; i < 15 ; i++){\n      <CountryInfo data={countries[i]}/>\n    };*/\n  //{top15countries.map(country => (<CountryInfo data=top15countries[]))}\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, top15countries.map(country => React.createElement(CountryInfo, {\n    key: country.cca3,\n    data: country,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), \"//country \\xE4r all data som finns om ett land\");\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jennyrudemo/Documents/Code/TNM040/lab1/src/App.js"],"names":["React","countries","CountryInfo","props","data","name","common","area","Bar","ratio","result","console","log","width","App","sort","a","b","filteredCountries","filter","country","top15countries","slice","map","cca3"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,SAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEC;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,MADjB,CAFD,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,KAAK,CAACC,IAAN,CAAWG,IADZ,SACoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADpB,CAND,EAUEC,GAVF,CAFD;AAgBD,CAjBD;;AAmBA,MAAMA,GAAG,GAAGL,KAAK,IAAI;AACnB,MAAIM,KAAK,GAAGN,KAAK,CAACC,IAAN,CAAWG,IAAX,GAAgB,QAA5B;AACA,QAAMG,MAAM,GAAGD,KAAK,GAAC,GAAN,GAAW,GAA1B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAE;AAC1BI,MAAAA,KAAK,EAAEH;AADmB,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CAVD;;AAaA,SAASI,GAAT,GAAe;AACf;AAIA;AACAb,EAAAA,SAAS,CAACc,IAAV,CAAe,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACV,IAAF,GAASS,CAAC,CAACT,IAAnC,EANe,CAOf;AAEA;;AACA,MAAIW,iBAAiB,GAAGjB,SAAS,CAACkB,MAAV,CAAiBC,OAAO,IAAIA,OAAO,CAACf,IAAR,CAAaC,MAAb,KAAwB,YAApD,CAAxB,CAVe,CAWf;AAGA;;AACA,MAAIe,cAAc,GAAGH,iBAAiB,CAACI,KAAlB,CAAwB,CAAxB,EAA0B,EAA1B,CAArB;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAYS,cAAZ,EAhBe,CAkBf;AAIE;AACA;;AAEA;;;AAIE;;AAEF,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECA,cAAc,CAACE,GAAf,CAAmBH,OAAO,IAAK,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAGA,OAAO,CAACI,IAA3B;AAAiC,IAAA,IAAI,EAAEJ,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,CAFD,mDADF;AASD;;AAED,eAAeN,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport countries from 'world-countries';\n\nconst CountryInfo = props => {\n  return (\n   \n   <div>\n\n    <p className=\"countryName\">\n    {props.data.name.common}\n    </p>\n\n    <p>\n    {props.data.area} km<sup>2</sup>\n    </p>\n\n    {Bar}\n\n    </div>\n    );\n};\n\nconst Bar = props => {\n  let ratio = props.data.area/17098242;\n  const result = ratio*100 +\"%\";\n  console.log(ratio);\n\n  return (\n    <div className=\"bar\" style={{\n      width: result \n    }}></div>\n    );\n};\n\n\nfunction App() {\n//console.log(countries);\n\n\n\n//sortera länderna efter area med sort\ncountries.sort((a,b) => b.area - a.area);\n//console.log(countries);\n\n//filtrera bort Antarktis\nlet filteredCountries = countries.filter(country => country.name.common !== \"Antarctica\");\n//console.log(filteredCountries);\n\n\n//välj ut första 15 med slice\nlet top15countries = filteredCountries.slice(0,15);\nconsole.log(top15countries);\n\n//const top = top15countries.filter(data => data.name.common !== 'Antarctica');\n\n\n\n  //let sortedCountries = countries.sort();\n  //console.log(sortedCountries);\n\n  /*for (let i=0; i < 15 ; i++){\n      <CountryInfo data={countries[i]}/>\n    };*/\n\n    //{top15countries.map(country => (<CountryInfo data=top15countries[]))}\n\n  return (\n    <div className=\"App\">\n    \n    {top15countries.map(country => (<CountryInfo key= {country.cca3} data={country}/>))}\n    //country är all data som finns om ett land\n     \n    </div>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}